generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id          String        @id @default(uuid())
  name        String
  email       String        @unique
  userName    String        @unique @default("")
  password    String
  token       String?
  isLogin     Boolean       @default(false)
  updateAt    DateTime      @default(now()) @updatedAt @map("updated_at")
  createdAt   DateTime      @default(now()) @map("created_at")
  post        post[]
  user_follow user_follow[]
  asset       asset[]

  @@map("users")
}

// model profile {
//   id             String          @id @default(uuid())
//   user           user            @relation(fields: [userId], references: [id])
//   profileImage   String?         @map("profile_image")
//   updateAt       DateTime        @default(now()) @updatedAt @map("updated_at")
//   createdAt      DateTime        @default(now()) @map("created_at")
//   userId         String          @unique @map("user_id")
//   user_followers user_follower[]
//   post           post[]
//   @@map("profiles")
// }

model user_follow {
  id        String   @id @default(uuid())
  user      user     @relation(fields: [userId], references: [id])
  follow    String
  updateAt  DateTime @default(now()) @updatedAt @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")
  userId    String

  @@map("user_follows")
}

// model user_follower {
//   id        String   @id @default(uuid())
//   follower  user     @relation(fields: [userId], references: [id])
//   follows   profile  @relation(fields: [profileId], references: [id])
//   updateAt  DateTime @default(now()) @updatedAt @map("updated_at")
//   createdAt DateTime @default(now()) @map("created_at")
//   userId    String
//   profileId String

//   @@map("user_follwers")
// }

model post {
  id        String   @id @default(uuid())
  user      user     @relation(fields: [userId], references: [id])
  caption   String   @default("")
  assets    asset[]
  updateAt  DateTime @default(now()) @updatedAt @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")
  userId    String

  @@map("posts")
}

model asset {
  id        String   @id @default(uuid())
  type      String
  user      user     @relation(fields: [userId], references: [id])
  updateAt  DateTime @default(now()) @updatedAt @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")
  post      post?    @relation(fields: [postId], references: [id])
  postId    String?  @map("post_id")
  userId    String
}

enum AssetType {
  image
  mp4
}
